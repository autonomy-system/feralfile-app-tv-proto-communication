

syntax = "proto3";
option java_multiple_files = true;
option java_outer_classname = "ControlProto";
option objc_class_prefix = "HLW";

package canvas_control;

message ConnectRequest {
  DeviceInfo device = 1;
}

message DeviceInfo {
  // Client device did key
  string device_id = 1;
  // Device name
  string device_name = 2;
}

message ConnectReply {
  bool ok = 1;
}

message CheckingStatus {
  // Client device did key
  string device_id = 1;
}

message ResponseStatus {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;  // Used only by the Watch method.
  }
  ServingStatus status = 1;
  // The scene id that the device is currently playing
  string scene_id = 2;
}

message DisconnectRequest {
  // Client device did key
  string device_id = 1;
}

message DisconnectReply {
  string message = 1;
}

message CastSingleRequest {
  // tokenId
  string id = 1;
  DragGestureRequest cursorDrag = 2;
}

message CastSingleReply {
  bool ok = 1;
}

message PlayArtwork {
  // tokenId
  string id = 1;
  // duration in seconds
  int32 duration = 2;
}

message CastCollectionRequest {
  // collection id
  string id = 1;
  // artworks
  repeated PlayArtwork artworks = 2;
}

message CastCollectionReply {
  bool ok = 1;
}


message UncastSingleRequest {
  // tokenId
  string id = 1;
}

message UncastSingleReply {
  bool ok = 1;
}


message UnCastRequest {
  // tokenId/Collection Id
  string id = 1;
}

message UnCastReply {
  bool ok = 1;
}

message KeyboardEventRequest {
  int32 code = 1;
}

message KeyboardEventReply {
  bool ok = 1;
}

message Empty {}

message RotateRequest {
  bool clockwise = 1;
}

message RotateReply {
  // return quarter turn after rotate
  int32 degree = 1;
}

message TapGestureRequest {
}

message DragGestureRequest {
  double dx = 1;
  double dy = 2;
  double coefficientX = 3;
  double coefficientY = 4;
}

message ZoomGestureRequest {
}

message GestureReply {
  bool ok = 1;
}

message  CursorOffset {
  double dx = 1;
  double dy = 2;
  double coefficientX = 3;
  double coefficientY = 4;
}

message CursorOffsetReply {
  bool ok = 1;
}